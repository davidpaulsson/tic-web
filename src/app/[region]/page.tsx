import { Locale, i18n } from '@/i18n-config';

import { draftMode } from 'next/headers';
import { notFound } from 'next/navigation';

import { getContentfulClient } from '@/lib/contentful/get-client';
import type { ContentfulPageResponse } from '@/lib/contentful/types';

import { Blocks } from '@/components/blocks';

// false: Disallow rendering dynamic params that are not generated by generateStaticParams.
export const dynamicParams = false;

export function generateStaticParams() {
  return i18n.locales.map((page) => ({
    region: page,
  }));
}

export async function generateMetadata({ params }: Readonly<{ params: { region: Locale } }>) {
  const cf = getContentfulClient();
  const entry = (await cf.getEntries({
    content_type: 'page',
    'fields.slug': params.region,
    limit: 1,
    include: 10,
    locale: params.region,
  })) as unknown as ContentfulPageResponse;

  if (!entry.items.length) {
    notFound();
  }

  const content = entry.items[0].fields;

  return {
    title: content.title,
    description: content.description,
    openGraph: {
      images: [
        {
          url: `/api/og?title=${content.title}`,
          width: 1200,
          height: 630,
          alt: content.description,
        },
      ],
    },
  };
}

export default async function Page({ params }: Readonly<{ params: { region: Locale } }>) {
  const { isEnabled } = draftMode();
  const cf = getContentfulClient(isEnabled);
  const entry = (await cf.getEntries({
    content_type: 'page',
    'fields.slug': params.region,
    limit: 1,
    include: 10,
    locale: params.region,
  })) as unknown as ContentfulPageResponse;

  if (!entry.items.length) {
    notFound();
  }

  const content = entry.items[0].fields;

  return (
    <main className="space-y-16 md:space-y-40">
      <Blocks region={params.region} blocks={content.blocks} />
    </main>
  );
}
