/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List
         * @description Lists all the accounts for the given user
         */
        get: operations["AccountList"];
        put?: never;
        /**
         * Create
         * @description Creates a new account
         */
        post: operations["AccountCreate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/{accountId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details
         * @description Get account by id
         */
        get: operations["AccountById"];
        /**
         * Edit
         * @description Updates an existing account
         */
        put: operations["AccountEdit"];
        post?: never;
        /**
         * Delete
         * @description If the given account has associations an error will be returned indicating that the references needs to be removed first.
         */
        delete: operations["AccountDelete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/default": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Default
         * @description Get the default account or if not set the first account for th user. If no account exists a new will be created
         */
        get: operations["AccountDefault"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/{accountId}/set-as-default": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Set default
         * @description Sets a new default account
         */
        put: operations["AccountSetDefault"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/{accountId}/companies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Companies
         * @description Get the companies associated with the account
         */
        get: operations["AccountGetCompanies"];
        put?: never;
        /**
         * Add companies
         * @description Adds the companies with the ids to the account, if the company already is in the account is will not be added. You can add maximum 10 000 companies per request.
         */
        post: operations["AccountAddCompanies"];
        /**
         * Delete company
         * @description Deletes an associated company by company id or externalid1 or externalid2 (in that given order)
         */
        delete: operations["AccountDeleteCompany"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/{accountId}/companies/{companyId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Edit company
         * @description Edits the existing company in the account
         */
        put: operations["AccountEditCompany"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/{accountId}/folders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Folders
         * @description Gets all folders associated with the account
         */
        get: operations["AccountFolders"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/bolagsverket/financial-reports/daily": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Bolagsverket financial reports daily statistics
         * @description Get statistics of registered financial reports per day at Bolagsverket
         */
        get: operations["BolagsverketStatisticsReportsDaily"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/bolagsverket/financial-reports/monthly": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Bolagsverket financial reports monthly statistics
         * @description Get statistics of registered financial reports per month at Bolagsverket
         */
        get: operations["BolagsverketStatisticsReportsMonthly"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/bolagsverket/financial-reports/discrepancies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Bolagsverket financial reports software discrepancies statistics
         * @description Get statistics of registered financial reports and discrepancies per software year to date
         */
        get: operations["BolagsverketStatisticsSoftwareDiscrepanciesYTD"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Summary
         * @description Gets a summary of the company by it's id
         */
        get: operations["CompanySummary"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/financial-summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Financial summary
         * @description Gets financial summary of the company by it's id
         */
        get: operations["FinancialSummary"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/intelligence": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Intelligence
         * @description Gets intelligence records of the company by it's id
         */
        get: operations["Intelligence"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/has-ownership-in": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Ownerships
         * @description Get companies that the company has ownership in
         */
        get: operations["CompanyHasOwnerships"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/bank-accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Bank accounts
         * @description Get associated bank accounts of the company by it's id
         */
        get: operations["CompanyBankAccounts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/se/sni": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * SNI codes
         * @description Get the companys industry codes as per Swedish Standard Industrial Classification (SNI)
         */
        get: operations["CompanySNICodes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/se/contributions-employement-service": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Employee contributions
         * @description Lists contributions from Swedish employment service for the company
         */
        get: operations["CompanyEmployeeContributions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/se/payroll": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Payrolls
         * @description Gets any historic known payrolls
         */
        get: operations["CompanyPayrolls"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/share-register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Share register
         * @description Gets whats known about the companys share register.
         */
        get: operations["CompanyShareRegister"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/purpose": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Purposes
         * @description Gets the purposes of the company
         */
        get: operations["CompanyPurpose"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/hyperlinks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hyperlinks
         * @description Get associated hyperlinks to the business
         */
        get: operations["CompanyHyperlinks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/names": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Names
         * @description Gets the names of the company
         */
        get: operations["CompanyNames"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/phone-numbers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Phonenumbers
         * @description Gets the phone numbers of the company
         */
        get: operations["CompanyPhonenumbers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/email-addresses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Email
         * @description Gets the email addresses of the company
         */
        get: operations["CompanyEmail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/signatories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Signatories
         * @description Gets the company signatories
         */
        get: operations["CompanySignatories"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/my-documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Documents
         * @description Get associated documents to a company that you own
         */
        get: operations["CompanyDocuments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/public-documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Public documents
         * @description Gets documents associated with the company
         */
        get: operations["CompanyPublicDocuments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/share-capital": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Share capital
         * @description Gets the share capital of the company
         */
        get: operations["CompanyShareCapital"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/trademarks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Trademarks
         * @description Gets trademarks registered to the company
         */
        get: operations["CompanyTrademarks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/addresses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Addresses
         * @description Lists all known addresses of a company
         */
        get: operations["CompanyAddresses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/registered-offices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Registered offices
         * @description Lists all registered offices addresses of a company
         */
        get: operations["CompanyRegisteredOffices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Status
         * @description Gets the status of the company
         */
        get: operations["CompanyStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/domains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Domains
         * @description Lists all domains associated with a company
         */
        get: operations["CompanyDomains"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/parties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Parties
         * @description Lists all known parties which includes board members
         */
        get: operations["CompanyParties"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/companies/{companyId}/financial-reports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Financial reports
         * @description Retrives all or specific financial report report for period. If no language code is specificed English is assumed.
         */
        get: operations["CompanyFinancialReports"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/documents/{documentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List
         * @description Gets the documents associated with the id
         */
        get: operations["DocumentList"];
        put?: never;
        post?: never;
        /**
         * Delete
         * @description Deletes the document with the given id
         */
        delete: operations["DocumentDelete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/documents/{documentId}/download": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download
         * @description Downloads the document
         */
        get: operations["DocumentDownload"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/european-commission/participant-register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search participants
         * @description Search for participants in the register
         */
        get: operations["ECSearchParticipants"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/european-commission/participant-register/{pic}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details participant
         * @description Get details about the participant
         */
        get: operations["ECDetailsParticipant"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/european-commission/participant-register/{pic}/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Participant projects
         * @description Get the projects that the participant is involved in
         */
        get: operations["ECParticipantProjects"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/european-commission/cordis-projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search projects
         * @description Searches for CORDIS projects
         */
        get: operations["ECSearchProjects"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/european-commission/cordis-projects/{projectId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Project members
         * @description Get's the organization members in the project
         */
        get: operations["ECDetailsProjectMembers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get available financial documents
         * @description Get available financial documents by id
         */
        get: operations["FinancialDocumentsById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/metadata": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get metadata for financial document
         * @description Get metadata for the financial document with id
         */
        get: operations["FinancialDocumentsMetadataById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/pdf": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download or view the financial document by PDF
         * @description Download or view the financial document by it's id in the PDF format
         */
        get: operations["FinancialDocumentReportDownloadPDF"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/xbrl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download or view the financial document by XBRL
         * @description Download or view the financial document by it's id in the XBRL format
         */
        get: operations["FinancialDocumentReportDownloadXBRL"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/ixbrl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download or view the financial document by iXBRL
         * @description Download or view the financial document by it's id in the iXBRL format
         */
        get: operations["FinancialDocumentReportDownloadiXBRL"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/error": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download or view the financial document by iXBRL and overlay errors
         * @description Download or view the financial document by it's id in the iXBRL format and overlay errors
         */
        get: operations["FinancialDocumentReportDownloadiXBRLOverylayErrors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/audit/pdf": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download or view the financial audit document by PDF
         * @description Download or view the financial audit document by it's id in the PDF format
         */
        get: operations["FinancialDocumentReportDownloadAuditPDF"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/audit/xbrl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download or view the financial audit document by XBRL
         * @description Download or view the financial audit document by it's id in the XBRL format
         */
        get: operations["FinancialDocumentReportDownloadAuditXBRL"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/financial-documents/se/{financialDocumentId}/audit/ixbrl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download or view the financial audit document by iXBRL
         * @description Download or view the financial audit document by it's id in the iXBRL format
         */
        get: operations["FinancialDocumentReportDownloadAuditiXBRL"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/finansinspektionen/notifications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Notifications
         * @description Get a list of all notifications relating to regulary changes in shareholdings
         */
        get: operations["FINotifications"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/finansinspektionen/notifications-extended": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Notifications extended
         * @description Get a list of all notifications relating to regulary changes in shareholdings including extended data about the instruments
         */
        get: operations["FINotificationsExtended"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/finansinspektionen/insider-trading": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Insider trading
         * @description Get a list of all insider trading events, note that transactions details can be found in a separate endpoint or you can use the extended insider-trading endpoint to get a summary.
         */
        get: operations["FIInsiderTrading"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/finansinspektionen/insider-trading/{reportId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Insider trading details
         * @description Get the transactions belogning to a report
         */
        get: operations["FIInsiderTradingDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/finansinspektionen/insider-trading-extended": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Insider trading summary
         * @description Get a summary of all insider trading transactions including extended data about the instruments
         */
        get: operations["FIInsiderTradingSummary"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/folders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List
         * @description Retuns all the folders for all accounts that the user is authorized to. You can also filter folders to specific accounts
         */
        get: operations["FolderList"];
        put?: never;
        /**
         * Create
         * @description Creates a new folder and returns id along with the url to the newly created folder
         */
        post: operations["FolderCreate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/folders/{folderId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details
         * @description Get the folder and number of files available
         */
        get: operations["FolderDetails"];
        /**
         * Edit
         * @description Updates the folder with new details
         */
        put: operations["FolderEdit"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/folders/{folderId}/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Documents
         * @description Get the folder contents
         */
        get: operations["FolderDocuments"];
        put?: never;
        /**
         * Upload
         * @description Upload a new document and request the transformation/s (only supported for PDF and single/multipage TIFF). Note! If the uploaded document contains more than 95% greyscale pixels it will always be forced to a greyscale transformed PDF.
         */
        post: operations["FolderUpload"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/folders/{folderId}/documents/{documentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Document
         * @description Get the specific document in the folder
         */
        get: operations["FolderDocument"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/ica/stores": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List
         * @description Get a list of all ICA stores
         */
        get: operations["ICAList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/ica/stores/{icaStoreId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details
         * @description Get a ICA store with the given id
         */
        get: operations["ICADetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/ica/stores/{icaStoreId}/notes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Notes
         * @description Get notes for a given ICA store id
         */
        get: operations["ICANotes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/ica/stores/{icaStoreId}/annual-reports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Annual reports
         * @description Retrives all or specific annual report for period. If no language code is specificed English is assumed.
         */
        get: operations["ICAAnnualReports"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/se/ica/catalog": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Catalog
         * @description Get a list of products and item that have been seen at ICA stores.
         */
        get: operations["ICACatalog"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/ica/stores/{ica_storeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Store
         * @description Get condensed statistics for the store
         */
        get: operations["ICAStatisticsStore"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/ica/stores/largest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Largest
         * @description Get condensed statistics for the largest stores
         */
        get: operations["ICAStatisticsLargest"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/ica/stores/most-profitable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Most profitable
         * @description Get condensed statistics for the most profitable stores
         */
        get: operations["ICAStatisticsMostProfitable"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/ica/stores/largest-extra-dividends": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Extra dividends
         * @description Get condensed statistics for the stores with specific dividends
         */
        get: operations["ICAStatisticsExtraDividends"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statistics/se/ica/stores/winter-destinations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Winter destinations
         * @description Get condensed statistics for the stores in popular tourist winter destinations
         */
        get: operations["ICAStatisticsWinterDestinations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/persons": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search
         * @description Search for a person
         */
        get: operations["PersonSearch"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/persons/{personId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details
         * @description Gets the person by id
         */
        get: operations["PersonDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/persons/{personId}/companies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Companies
         * @description Gets a summary of the company by it's id
         */
        get: operations["PersonCompanies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/companies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search companies
         * @description Search companies in our lightning-fast memory database
         */
        get: operations["SearchCompanies"];
        put?: never;
        /**
         * Search companies multi
         * @description Multi search enables to carry out multiple search requests in a single request, this endpoint does not support so called federated search
         */
        post: operations["SearchCompaniesMulti"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/companies/reports/se": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search text in financial reports belonging to Swedish businesses
         * @description Search reports in our lightning-fast memory database
         */
        get: operations["SearchCompaniesReportsSweden"];
        put?: never;
        /**
         * Search text in financial reports belonging to Swedish businesses multi
         * @description Multi search enables to carry out multiple search requests in a single request, this endpoint does not support so called federated search
         */
        post: operations["SearchCompaniesReportsSwedenMulti"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Me
         * @description Get the identity details representing the calling user
         */
        get: operations["UserMe"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/claims": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Claims
         * @description Get the claims for the calling user
         */
        get: operations["UserMeClaims"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AccountCompanyCreate_Dto: {
            /** Format: int32 */
            companyId: number;
            externalId1?: string | null;
            externalId2?: string | null;
        };
        AccountCompanyDetail_Dto: {
            /** Format: int32 */
            companyId?: number;
            externalId1?: string | null;
            externalId2?: string | null;
            companyRegistrationNumber?: string | null;
            mostRecentLegalName?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            dataInSearch?: components["schemas"]["TypesenseCompanyDocument"];
        };
        AccountCompanyDetail_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["AccountCompanyDetail_Dto"][] | null;
        };
        AccountCompanyEdit_Dto: {
            externalId1?: string | null;
            externalId2?: string | null;
        };
        AccountCompany_Dto: {
            /** Format: int32 */
            companyId?: number;
            externalId1?: string | null;
            externalId2?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        AccountCreate_Dto: {
            accountName: string;
            accountRegistrationNumber?: string | null;
            /** Format: uri */
            webhookUrl?: string | null;
        };
        AccountDetail_Dto: {
            /** Format: int32 */
            numberOfUsers?: number;
            /** Format: int32 */
            accountId?: number;
            accountName?: string | null;
            accountRegistrationNumber?: string | null;
            webhookUrl?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        AccountEdit_Dto: {
            accountName: string;
            accountRegistrationNumber?: string | null;
            /** Format: uri */
            webhookUrl?: string | null;
        };
        Account_Dto: {
            /** Format: int32 */
            accountId?: number;
            accountName?: string | null;
            accountRegistrationNumber?: string | null;
            webhookUrl?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        Account_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["Account_Dto"][] | null;
        };
        /** @enum {string} */
        BankAccountType: "bankgiro" | "plusgiro" | "iban" | "other";
        BolagsverketFinancialReportSoftwareStatistics: {
            companyIntelligenceSubType?: string | null;
            reportSoftwareMetaTag?: string | null;
            discrepancies?: string | null;
            totalRegisteredForSoftware?: string | null;
        };
        BolagsverketFinancialReportsStatistics: {
            eReports?: number[][] | null;
            pReports?: number[][] | null;
            softwareEnum?: {
                [key: string]: string | null;
            } | null;
            softwareUsed?: number[][] | null;
            intelligence?: number[][] | null;
            softwareYTD?: {
                [key: string]: number | null;
            } | null;
        };
        /** @enum {string} */
        CompanyAddressType: "mailAddress" | "visitingAddress" | "bothMailAndVisitingAddress";
        CompanyAddress_Dto: {
            /** Format: int32 */
            companyAddressId?: number;
            addressType?: components["schemas"]["CompanyAddressType"];
            label?: string | null;
            houseNumber?: string | null;
            co?: string | null;
            street?: string | null;
            postalCode?: string | null;
            city?: string | null;
            state?: string | null;
            county?: string | null;
            district?: string | null;
            countryName?: string | null;
            countryCodeAlpha3?: string | null;
            locality?: string | null;
            localityType?: string | null;
            /** Format: double */
            latitude?: number | null;
            /** Format: double */
            longitude?: number | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyBankAccount_Dto: {
            bankAccountType?: components["schemas"]["BankAccountType"];
            accountNumber?: string | null;
            swifT_BIC?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyContributionsEmployementService_Dto: {
            /** Format: int32 */
            period?: number;
            contributionType?: string | null;
            /** Format: double */
            amount?: number;
            iso4217CurrencyCode?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        /** @enum {string} */
        CompanyDocumentType: "annualReport" | "quarterlyReport" | "interimReport" | "dividend" | "case";
        CompanyDocument_Dto: {
            /** Format: int32 */
            companyDocumentId?: number;
            companyDocumentType?: components["schemas"]["CompanyDocumentType"];
            /** Format: int32 */
            externalDocumentId?: number | null;
            /** Format: date-time */
            documentDate?: string | null;
            documentTitle?: string | null;
            documentVersion?: string | null;
            documentValue1?: string | null;
            documentValue2?: string | null;
            documentValue3?: string | null;
            comments?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string | null;
            /** Format: int64 */
            fileId?: number | null;
            /** Format: date-time */
            foundAtUtc?: string | null;
            /** Format: int32 */
            similarToCompanyDocumentId?: number | null;
        };
        CompanyDomain_Dto: {
            /** Format: int32 */
            companyDomainId?: number;
            /** Format: int32 */
            domainId?: number;
            domainName?: string | null;
            monitoringEnabled?: boolean;
            lastErrorMessage?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
        };
        CompanyEmail_Dto: {
            emailAddressType?: components["schemas"]["EmailAddressType"];
            emailAddress?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyFinancialDocumentMetadata_Dto: {
            /** Format: int32 */
            financialDocumentId?: number;
            companyName?: string | null;
            /** Format: int64 */
            registrationNumber?: number | null;
            /** Format: date-time */
            arrivalDate?: string | null;
            ruleset?: string | null;
            code?: string | null;
            readonly formatDescription?: string | null;
            /** Format: date-time */
            periodStart?: string | null;
            /** Format: date-time */
            periodEnd?: string | null;
            /** Format: date-time */
            annualGeneralMeetingDate?: string | null;
            /** Format: date-time */
            lastSignatureDate?: string | null;
            auditorFullName?: string | null;
            auditCompanyName?: string | null;
            readonly hasReportXBRL?: boolean;
            readonly hasReportiXBRL?: boolean;
            readonly hasReportPDF?: boolean;
            readonly hasAuditLetterXBRL?: boolean;
            readonly hasAuditLetteriXBRL?: boolean;
            readonly hasAuditLetterPDF?: boolean;
            reportSoftwareMetaTag?: string | null;
            reportSoftwareVersionMetaTag?: string | null;
            reportApplicationName?: string | null;
            reportAuditReportHashMetaTag?: string | null;
            reportOriginatorMetaTag?: string | null;
            reportAuditorMetaTag?: string | null;
            auditorSoftwareMetaTag?: string | null;
            auditorSoftwareVersionMetaTag?: string | null;
            auditorApplicationName?: string | null;
            auditorReportHashMetaTag?: string | null;
            auditorOriginatorMetaTag?: string | null;
            /** Format: date-time */
            caseRegistrationDate?: string | null;
            /** Format: int32 */
            caseNumber?: number | null;
            /** Format: int32 */
            caseYear?: number | null;
            /** Format: date-time */
            notificationDate?: string | null;
        };
        CompanyFinancialDocument_Dto: {
            /** Format: int32 */
            financialDocumentId?: number;
            isElectronic?: boolean | null;
            /** Format: int32 */
            caseNumber?: number | null;
            /** Format: int32 */
            caseYear?: number | null;
            /** Format: date-time */
            caseRegistrationDate?: string | null;
            availableFiles?: components["schemas"]["FinancialDocumentFile"][] | null;
        };
        CompanyFinancialSummary_Dto: {
            /** Format: date-time */
            periodStart?: string;
            /** Format: date-time */
            periodEnd?: string;
            /** Format: int32 */
            rs_NetSalesK?: number | null;
            /** Format: int32 */
            rs_OtherOperatingIncomeK?: number | null;
            /** Format: int32 */
            rs_OperatingProfitOrLossK?: number | null;
            /** Format: int32 */
            rs_SumFinancialItemsK?: number | null;
            /** Format: int32 */
            rs_ProfitAfterFinancialItemsK?: number | null;
            /** Format: int32 */
            bs_TotalAssetsK?: number | null;
            /** Format: int32 */
            fn_NumberOfEmployees?: number | null;
            /** Format: double */
            km_OperatingMargin?: number | null;
            /** Format: double */
            km_NetProfitMargin?: number | null;
            /** Format: double */
            km_EquityAssetsRatio?: number | null;
            /** Format: double */
            km_GrossMargin?: number | null;
            isAudited?: boolean | null;
        };
        CompanyHyperlink_Dto: {
            companyLinkType?: components["schemas"]["CompanyLinkType"];
            hyperlink?: string | null;
            webpageTitle?: string | null;
            webpageDescription?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        /** @enum {string} */
        CompanyIntelligenceType: "createdAsShelfCompany" | "suspectedForQuickLiquidation" | "couldBeFranchise" | "affliatedWithArticle" | "unknown" | "suspectedAddress" | "formerChecks" | "presentOnWarningList" | "annualReportDiscrepancies" | "auditorResignation" | "registration";
        CompanyIntelligence_Dto: {
            companyIntelligenceType?: components["schemas"]["CompanyIntelligenceType"];
            companyIntelligenceSubType?: string | null;
            notes?: string | null;
            /** Format: int32 */
            score?: number | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            /** Format: int32 */
            externalId?: number | null;
            readonly sourceUrl?: string | null;
        };
        /** @enum {string} */
        CompanyLinkType: "homepage" | "facebook" | "instagram" | "x_Twitter" | "linkedIn" | "other";
        CompanyName_Dto: {
            companyNamingType?: components["schemas"]["CompanyNamingType"];
            nameOrIdentifier?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        /** @enum {string} */
        CompanyNamingType: "legalName" | "commonName" | "tradingName" | "particularName" | "foreignLanguageName" | "other";
        CompanyPayroll_Dto: {
            /** Format: int32 */
            companyPayrollId?: number;
            /** Format: int32 */
            period?: number | null;
            /** Format: double */
            payrollTaxAmount?: number | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyPerson_Dto: {
            /** Format: int32 */
            companyPersonId?: number;
            positionType?: string | null;
            positionDescription?: string | null;
            /** Format: date-time */
            positionStart?: string | null;
            /** Format: date-time */
            positionEnd?: string | null;
            roleByCompanyName?: string | null;
            roleByCompanyRegistrationNumber?: string | null;
            /** Format: int32 */
            personId?: number | null;
            personalIdentityNumber?: string | null;
            fullName?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyPhoneNumber_Dto: {
            e164PhoneNumber?: string | null;
            phoneNumberType?: components["schemas"]["PhoneNumberType"];
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyPurpose_Dto: {
            purpose?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyRegisteredOffice_Dto: {
            /** Format: int32 */
            companyRegisteredOfficeId?: number;
            registeredOfficeLocation?: string | null;
            /** Format: double */
            latitude?: number | null;
            /** Format: double */
            longitude?: number | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanySNI_Dto: {
            sni_2007Code?: string | null;
            sni_2007Name?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyShareCapital_Dto: {
            /** Format: int32 */
            companyShareCapitalId?: number;
            /** Format: int32 */
            companyId?: number | null;
            /** Format: double */
            shareCapitalAmount?: number | null;
            shareCapitalISO4217CurrencyCode?: string | null;
            /** Format: int32 */
            numberOfShares?: number | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanyShareRegister_Dto: {
            /** Format: int32 */
            holderCompanyId?: number | null;
            holderCompanyMostRecentLegalName?: string | null;
            /** Format: int32 */
            holderPersonId?: number | null;
            holderPersonMostRecentFullName?: string | null;
            /** Format: int32 */
            numberOfShares?: number | null;
            shareType?: string | null;
            shareClass?: string | null;
            /** Format: double */
            paidUp?: number | null;
            /** Format: double */
            nominalValuePerShareInUSD?: number | null;
            /** Format: double */
            nominalValuePerShareInCurrencyCode?: number | null;
            iso4217CurrencyCode?: string | null;
            onBehalfOf?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        CompanySignatory_Dto: {
            signatureDescription?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
        };
        /** @enum {string} */
        CompanyStatusType: "reorganizationOfBusinessCommenced" | "bankruptcyTerminatedWithSurplus" | "dissolvedByCompanyDivision" | "liquidationTerminated" | "mergerProcedureCommenced" | "acquisitionByCompanyDivision" | "acquisitionByMerger" | "dissolvedByMergerProcedure" | "liquidationDecided" | "bankruptcyProceedingsCommenced" | "bankruptcyProceedingsTerminated" | "mergerPermitted" | "liquidationCommenced" | "bankruptcyTerminatedUnknownOutcome" | "compulsoryLiquidation" | "liquidationContinues" | "struckOffRegisterCrossBorderMerger" | "other";
        CompanyStatus_Dto: {
            /** Format: int32 */
            companyStatusId?: number;
            companyStatusType?: components["schemas"]["CompanyStatusType"];
            /** Format: date-time */
            statusDate?: string | null;
            statusDescription?: string | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        /** @enum {string} */
        CompanyTrademarkRegistrationAuthorityType: "euipo" | "swedenPRV" | "other";
        /** @enum {string} */
        CompanyTrademarkType: "word" | "figurative" | "other";
        CompanyTrademark_Dto: {
            /** Format: int32 */
            companyTrademarkId?: number;
            trademarkTitle?: string | null;
            companyTrademarkType?: components["schemas"]["CompanyTrademarkType"];
            trademarkRegistrationIdentifier?: string | null;
            trademarkApplicationIdentifier?: string | null;
            /** Format: date-time */
            trademarkApplicationDate?: string | null;
            /** Format: date-time */
            trademarkRegistrationDate?: string | null;
            /** Format: date-time */
            trademarkRenewalDate?: string | null;
            /** Format: date-time */
            trademarkExpirationDate?: string | null;
            companyTrademarkRegistrationAuthorityType?: components["schemas"]["CompanyTrademarkRegistrationAuthorityType"];
            /** Format: int64 */
            fileId?: number | null;
            /** Format: date-time */
            firstSeenAtUtc?: string | null;
            /** Format: date-time */
            lastSeenAtUtc?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        DTO_SE_CompanySummary: {
            /** Format: int32 */
            companyId?: number;
            companyRegistrationNumber?: string | null;
            /** Format: date-time */
            registrationDate?: string | null;
            mostRecentLegalName?: string | null;
            mostRecentPurpose?: string | null;
            /** Format: int32 */
            mostRecentCompanyStatusType?: number | null;
            /** Format: int32 */
            companyRepresentativeBornYear?: number | null;
            industry?: string | null;
            /** Format: int32 */
            year1_AnnualReportPeriod?: number | null;
            /** Format: int32 */
            year1_NetSales?: number | null;
            /** Format: int32 */
            year1_OperatingProfit?: number | null;
            /** Format: double */
            year1_NetSalesChange?: number | null;
            /** Format: double */
            year1_GrossMargin?: number | null;
            /** Format: double */
            year1_OperatingMargin?: number | null;
            /** Format: double */
            year1_NetProfitMargin?: number | null;
            /** Format: int32 */
            year1_NumberOfEmployees?: number | null;
            /** Format: int32 */
            year2_AnnualReportPeriod?: number | null;
            /** Format: int32 */
            year2_NetSales?: number | null;
            /** Format: int32 */
            year2_OperatingProfit?: number | null;
            /** Format: double */
            year2_NetSalesChange?: number | null;
            /** Format: double */
            year2_GrossMargin?: number | null;
            /** Format: double */
            year2_OperatingMargin?: number | null;
            /** Format: double */
            year2_NetProfitMargin?: number | null;
            /** Format: int32 */
            year2_NumberOfEmployees?: number | null;
            /** Format: int32 */
            year3_AnnualReportPeriod?: number | null;
            /** Format: int32 */
            year3_NetSales?: number | null;
            /** Format: int32 */
            year3_OperatingProfit?: number | null;
            /** Format: double */
            year3_NetSalesChange?: number | null;
            /** Format: double */
            year3_GrossMargin?: number | null;
            /** Format: double */
            year3_OperatingMargin?: number | null;
            /** Format: double */
            year3_NetProfitMargin?: number | null;
            /** Format: int32 */
            year3_NumberOfEmployees?: number | null;
            /** Format: int32 */
            year4_AnnualReportPeriod?: number | null;
            /** Format: int32 */
            year4_NetSales?: number | null;
            /** Format: int32 */
            year4_OperatingProfit?: number | null;
            /** Format: double */
            year4_NetSalesChange?: number | null;
            /** Format: double */
            year4_GrossMargin?: number | null;
            /** Format: double */
            year4_OperatingMargin?: number | null;
            /** Format: double */
            year4_NetProfitMargin?: number | null;
            /** Format: int32 */
            year4_NumberOfEmployees?: number | null;
            /** Format: int32 */
            year5_AnnualReportPeriod?: number | null;
            /** Format: int32 */
            year5_NetSales?: number | null;
            /** Format: int32 */
            year5_OperatingProfit?: number | null;
            /** Format: double */
            year5_NetSalesChange?: number | null;
            /** Format: double */
            year5_GrossMargin?: number | null;
            /** Format: double */
            year5_OperatingMargin?: number | null;
            /** Format: double */
            year5_NetProfitMargin?: number | null;
            /** Format: int32 */
            year5_NumberOfEmployees?: number | null;
        };
        /** @enum {string} */
        DocumentFileSystemType: "orginal" | "pdfSearchable" | "jsonOcrV1" | "jsonEntityV1" | "jsonOcrV2" | "jsonEntityV2";
        /** @enum {string} */
        DocumentFolderType: "generic" | "annualReport";
        /** @enum {string} */
        DocumentTransformStatusType: "requested" | "processing" | "success" | "warning" | "failed";
        /** @enum {string} */
        DocumentTransformType: "transformToSearchablePDF" | "transformToOCR" | "transformToMetadata" | "transformToEntity";
        /** @enum {string} */
        DocumentType: "unspecific" | "annualReport";
        Document_Dto: {
            /** Format: int32 */
            documentId?: number;
            /** Format: int32 */
            documentFolderId?: number;
            /** Format: int32 */
            originsFromDocumentId?: number | null;
            /** Format: int32 */
            companyId?: number | null;
            externalId1?: string | null;
            externalId2?: string | null;
            description?: string | null;
            documentType?: components["schemas"]["DocumentType"];
            fileName?: string | null;
            fileMimeType?: string | null;
            documentTransformType?: components["schemas"]["DocumentTransformType"];
            documentTransformStatusType?: components["schemas"]["DocumentTransformStatusType"];
            documentFileSystemType?: components["schemas"]["DocumentFileSystemType"];
            isDeleted?: boolean | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        EC_CORDISOrganization_Dto: {
            /** Format: int32 */
            orderInProject?: number | null;
            role?: string | null;
            /** Format: int32 */
            pic?: number | null;
            legalName?: string | null;
            shortName?: string | null;
            countryCodeAlpha2?: string | null;
            city?: string | null;
            postCode?: string | null;
            /** Format: int32 */
            companyId?: number | null;
            /** Format: double */
            longitude?: number | null;
            /** Format: double */
            latitude?: number | null;
            contactForm?: string | null;
            organizationURL?: string | null;
            sme?: boolean | null;
            active?: string | null;
            activityType?: string | null;
            /** Format: date-time */
            contentUpdate?: string | null;
            /** Format: double */
            ecContribution?: number | null;
            endOfParticipation?: boolean | null;
            /** Format: double */
            netECContribution?: number | null;
            nutsCode?: string | null;
            /** Format: int32 */
            rcn?: number | null;
            /** Format: double */
            totalCost?: number | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        EC_CORDIS_Project_Dto: {
            /** Format: int32 */
            projectId?: number;
            acronym?: string | null;
            /** Format: date-time */
            contentUpdateDate?: string | null;
            /** Format: double */
            ecMaxContribution?: number | null;
            /** Format: date-time */
            ecSignatureDate?: string | null;
            /** Format: date-time */
            endDate?: string | null;
            frameworkProgramme?: string | null;
            fundingScheme?: string | null;
            grantDOI?: string | null;
            legalBasis?: string | null;
            masterCall?: string | null;
            nature?: string | null;
            objective?: string | null;
            /** Format: int32 */
            rcn?: number | null;
            /** Format: date-time */
            startDate?: string | null;
            status?: string | null;
            subCall?: string | null;
            title?: string | null;
            topics?: string | null;
            /** Format: double */
            totalCost?: number | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        EC_CORDIS_Project_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["EC_CORDIS_Project_Dto"][] | null;
        };
        EC_ParticipantDetail_Dto: {
            /** Format: int32 */
            pic?: number;
            legalName?: string | null;
            businessName?: string | null;
            vat?: string | null;
            registrationNumber?: string | null;
            status?: string | null;
            address?: string | null;
            cpLink?: string | null;
            erasmusCode?: string | null;
            empty?: boolean | null;
            valid?: boolean | null;
            legalNameSearch?: boolean | null;
            countryName?: string | null;
            countryCodeAlpha2?: string | null;
            countryCodeInternal?: string | null;
            /** Format: int32 */
            companyId?: number | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            /** Format: double */
            netECContribution?: number | null;
        };
        EC_ParticipantProject_Dto: {
            /** Format: int32 */
            projectId?: number;
            acronym?: string | null;
            /** Format: double */
            ecMaxContribution?: number | null;
            /** Format: date-time */
            ecSignatureDate?: string | null;
            /** Format: date-time */
            endDate?: string | null;
            frameworkProgramme?: string | null;
            fundingScheme?: string | null;
            grantDOI?: string | null;
            legalBasis?: string | null;
            masterCall?: string | null;
            nature?: string | null;
            objective?: string | null;
            /** Format: date-time */
            startDate?: string | null;
            status?: string | null;
            subCall?: string | null;
            title?: string | null;
            topics?: string | null;
            /** Format: double */
            projectTotalCost?: number | null;
            /** Format: int32 */
            orderInProject?: number | null;
            role?: string | null;
            /** Format: double */
            ecContribution?: number | null;
            endOfParticipation?: boolean | null;
            /** Format: double */
            netECContribution?: number | null;
            nutsCode?: string | null;
            /** Format: int32 */
            rcn?: number | null;
            /** Format: double */
            participantTotalCost?: number | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        EC_Participant_Dto: {
            /** Format: int32 */
            pic?: number;
            legalName?: string | null;
            businessName?: string | null;
            vat?: string | null;
            registrationNumber?: string | null;
            status?: string | null;
            address?: string | null;
            cpLink?: string | null;
            erasmusCode?: string | null;
            empty?: boolean | null;
            valid?: boolean | null;
            legalNameSearch?: boolean | null;
            countryName?: string | null;
            countryCodeAlpha2?: string | null;
            countryCodeInternal?: string | null;
            /** Format: int32 */
            companyId?: number | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        EC_Participant_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["EC_Participant_Dto"][] | null;
        };
        /** @enum {string} */
        EmailAddressType: "general" | "personal" | "other";
        FI_InsiderTradingExtended_Dto: {
            /** Format: int32 */
            fI_InsynshandelRapportId?: number;
            /** Format: date-time */
            foundAtUtc?: string | null;
            /** Format: date-time */
            forstaPubliceringsDatum?: string | null;
            /** Format: date-time */
            forstaTransaktionsDatum?: string | null;
            arendeNummer?: string | null;
            instrumentISIN?: string | null;
            instrumentnamn?: string | null;
            branchName?: string | null;
            sectorName?: string | null;
            /** Format: double */
            senastEV?: number | null;
            personILedandeStallning?: string | null;
            befattning?: string | null;
            /** Format: double */
            senastKurs?: number | null;
            /** Format: double */
            viktatSnittPris?: number | null;
            /** Format: double */
            nettoSumma?: number | null;
            /** Format: double */
            nettoVolym?: number | null;
            valutaKod?: string | null;
        };
        FI_InsiderTradingExtended_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["FI_InsiderTradingExtended_Dto"][] | null;
        };
        FI_InsiderTradingTransaction_Dto: {
            karaktar?: string | null;
            instrumentnamn?: string | null;
            instrumentTyp?: string | null;
            instrumentISIN?: string | null;
            /** Format: date-time */
            transaktionsDatum?: string | null;
            /** Format: double */
            volym?: number | null;
            volymsenhet?: string | null;
            /** Format: double */
            pris?: number | null;
            valutaKod?: string | null;
            platsForTransaktionen?: string | null;
            koppladTillGenomforandetAvAktieOptionsprogram?: boolean | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            /** Format: date-time */
            foundAtUtc?: string;
        };
        FI_InsiderTrading_Dto: {
            /** Format: int32 */
            fI_InsynshandelRapportId?: number;
            /** Format: int32 */
            reportId?: number;
            arendeNummer?: string | null;
            /** Format: int32 */
            arendeRevision?: number;
            arendeStatus?: string | null;
            /** Format: date-time */
            publiceringsDatum?: string | null;
            namnPaAnmalningsskyldig?: string | null;
            emittentNamn?: string | null;
            emittentLEIKod?: string | null;
            personILedandeStallning?: string | null;
            befattning?: string | null;
            narstaende?: boolean | null;
            nyRapporting?: boolean | null;
            korrigering?: boolean | null;
            beskrivningAvKorrigering?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            /** Format: date-time */
            foundAtUtc?: string;
            /** Format: date-time */
            transaktionerFoundAtUtc?: string | null;
        };
        FI_InsiderTrading_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["FI_InsiderTrading_Dto"][] | null;
        };
        FI_NotificationExtended_Dto: {
            /** Format: int32 */
            fI_FlaggningId?: number;
            /** Format: int32 */
            fI_FlaggningsmeddelandeId?: number | null;
            instrumentISIN?: string | null;
            companyName?: string | null;
            branchName?: string | null;
            sectorName?: string | null;
            /** Format: double */
            senasteEV?: number | null;
            /** Format: double */
            senasteKurs?: number | null;
            emittent?: string | null;
            skalForFlaggning?: string | null;
            /** Format: date-time */
            transaktionsdatum?: string | null;
            /** Format: date-time */
            publiceringsDatum?: string | null;
            innehavare?: string | null;
            /** Format: date-time */
            foundAtUtc?: string;
            /** Format: double */
            foreTransaktionenAntalAktier?: number | null;
            /** Format: double */
            efterTransaktionenAntalAktier?: number | null;
            /** Format: double */
            netto?: number | null;
        };
        FI_NotificationExtended_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["FI_NotificationExtended_Dto"][] | null;
        };
        FI_Notification_Dto: {
            /** Format: int32 */
            fI_FlaggningId?: number | null;
            /** Format: int32 */
            fI_FlaggningsmeddelandeId?: number | null;
            skalForFlaggning?: string | null;
            /** Format: date-time */
            transaktionsdatum?: string | null;
            /** Format: double */
            gransvardeAntalAktier?: number | null;
            /** Format: double */
            gransvardeAntalRostratter?: number | null;
            emittent?: string | null;
            innehavare?: string | null;
            instrumentTyp?: string | null;
            instrumentISIN?: string | null;
            /** Format: double */
            foreTransaktionenAntalAktier?: number | null;
            /** Format: double */
            foreTransaktionenAntalRostratter?: number | null;
            /** Format: double */
            efterTransaktionenAntalAktier?: number | null;
            /** Format: double */
            efterTransaktionenAntalDirektaRostratter?: number | null;
            /** Format: double */
            efterTransaktionenAntalIndirektaRostratter?: number | null;
            /** Format: double */
            efterTransaktionenAndelAktier?: number | null;
            /** Format: double */
            efterTransaktionenAndelDirektaRostratter?: number | null;
            /** Format: double */
            efterTransaktionenAndelIndirektaRostratter?: number | null;
            /** Format: date-time */
            publiceringsDatum?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            /** Format: date-time */
            foundAtUtc?: string;
        };
        FI_Notification_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["FI_Notification_Dto"][] | null;
        };
        FinancialDocumentFile: {
            fileType?: components["schemas"]["FinancialDocumentFileType"];
            readonly url?: string | null;
        };
        /** @enum {string} */
        FinancialDocumentFileType: "reportPDF" | "reportXBRL" | "reportXHTML" | "auditLetterPDF" | "auditLetterXBRL" | "auditLetteriXBRL" | "errorXHTML" | "metadata";
        FolderCreate_Dto: {
            folderName: string;
            description?: string | null;
            folderType: components["schemas"]["DocumentFolderType"];
            externalId1?: string | null;
            externalId2?: string | null;
            /** Format: int32 */
            accountId: number;
        };
        FolderDetail_Dto: {
            folderName?: string | null;
            description?: string | null;
            folderType?: components["schemas"]["DocumentFolderType"];
            externalId1?: string | null;
            externalId2?: string | null;
            /** Format: int32 */
            numberOfFiles?: number;
            /** Format: int32 */
            system_AccountId?: number;
            isDeleted?: boolean | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
            /** Format: int32 */
            accountId: number;
        };
        FolderEdit_Dto: {
            folderName: string;
            description?: string | null;
            folderType: components["schemas"]["DocumentFolderType"];
            externalId1?: string | null;
            externalId2?: string | null;
            /** Format: int32 */
            accountId: number;
        };
        Folder_Dto: {
            /** Format: int32 */
            folderId?: number;
            folderName?: string | null;
            description?: string | null;
            folderType?: components["schemas"]["DocumentFolderType"];
            externalId1?: string | null;
            externalId2?: string | null;
            /** Format: int32 */
            accountId?: number;
            isDeleted?: boolean | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        Folder_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["Folder_Dto"][] | null;
        };
        /** @enum {string} */
        GenericHighlight: "green" | "yellow" | "red";
        GenericModelCell: {
            /** Format: int32 */
            order?: number;
            localizedFieldName?: string | null;
            enFieldName?: string | null;
            displayFormat?: string | null;
            type?: string | null;
            value?: unknown;
            notes?: string | null;
            highlight?: components["schemas"]["GenericHighlight"];
        };
        HighlightElement: {
            field?: string | null;
            matched_tokens?: string[] | null;
            snippet?: string | null;
        };
        ICAStoreAnnualReportCache: {
            /** Format: int32 */
            annualReportPeriod?: number;
            annualReportPeriodDescription?: string | null;
            /** Format: int32 */
            revenue?: number | null;
            /** Format: double */
            grossProfit?: number | null;
            /** Format: double */
            operatingProfit?: number | null;
            /** Format: double */
            returnOnEquity?: number | null;
            /** Format: int32 */
            dividend?: number | null;
            /** Format: int32 */
            extraDividend?: number | null;
            readonly revenueDescription?: string | null;
            /** Format: int32 */
            profit?: number | null;
            /** Format: double */
            profitMargin?: number | null;
        };
        ICAStoreDetailCache: {
            storeName?: string | null;
            slug?: string | null;
            ogDescription?: string | null;
            ogTitle?: string | null;
            ogImage?: string | null;
            otherStoreNames?: {
                [key: string]: string | null;
            } | null;
            address?: string | null;
            storeFormat?: string | null;
            /** Format: double */
            latitude?: number | null;
            /** Format: double */
            longitude?: number | null;
            /** Format: double */
            rating?: number | null;
            notes?: components["schemas"]["ICAStoreNoteCache"][] | null;
            periods?: components["schemas"]["ICAStoreDetailFinancialPeriodCache"][] | null;
            revenue?: number[] | null;
            grossMargins?: number[] | null;
            operatingMargin?: number[] | null;
            profitMargin?: number[] | null;
            numberOfEmployees?: number[] | null;
            dividends?: number[] | null;
            extraDividends?: number[] | null;
            netProfitOrLoss?: number[] | null;
            balancedResultAfterDividend?: number[] | null;
            costs?: components["schemas"]["ICAStoreDetailFinancialCostCache"][] | null;
        };
        ICAStoreDetailFinancialCostCache: {
            label?: string | null;
            amount?: number[] | null;
        };
        ICAStoreDetailFinancialPeriodCache: {
            /** Format: int32 */
            period?: number;
            shortDescription?: string | null;
            periodLength?: string | null;
            highlight?: boolean;
            highlightLabel?: string | null;
        };
        ICAStoreFinancialsCache: {
            /** Format: int32 */
            icA_StoreId?: number;
            storeFormat?: string | null;
            storeName?: string | null;
            slug?: string | null;
            storeNamesIfMany?: string | null;
            organizationNumber?: string | null;
            annualReports?: components["schemas"]["ICAStoreAnnualReportCache"][] | null;
            readonly revenueJsonArray?: string | null;
            readonly revenueOperatingProfitArray?: string | null;
            readonly extraDividendJsonArray?: string | null;
            readonly allDividendsJsonArray?: string | null;
        };
        ICAStoreNoteCache: {
            /** Format: int32 */
            period?: number | null;
            /** Format: date-time */
            date?: string | null;
            notes?: string | null;
        };
        ICA_CatalogItem_Dto: {
            /** Format: int32 */
            icA_CatalogItemId?: number;
            /** Format: int64 */
            gtin?: number | null;
            sku?: string | null;
            ci?: string | null;
            productName?: string | null;
            brand?: string | null;
            /** Format: double */
            approxPrice?: number | null;
            category?: string | null;
            productType?: string | null;
            /** Format: date-time */
            lastUpdatedUtc?: string | null;
            gS1OwnerName?: string | null;
            gS1OwnerStreet?: string | null;
            gS1OwnerZipCode?: string | null;
            gS1OwnerCity?: string | null;
            gS1OwnerCountry?: string | null;
        };
        ICA_CatalogItem_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["ICA_CatalogItem_Dto"][] | null;
        };
        ICA_StoreNote_Dto: {
            /** Format: int32 */
            icA_StoreNoteId?: number;
            /** Format: int32 */
            icA_StoreId?: number;
            /** Format: int32 */
            period?: number | null;
            /** Format: date-time */
            date?: string | null;
            type?: string | null;
            notes?: string | null;
            attribute1?: string | null;
            attribute2?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        ICA_Store_Dto: {
            /** Format: int32 */
            ica_StoreId?: number;
            /** Format: int32 */
            companyId?: number | null;
            icaExternalStoreId?: string | null;
            /** Format: int64 */
            icaStoreOwnerId?: number | null;
            storeName?: string | null;
            city?: string | null;
            street?: string | null;
            /** Format: int64 */
            zipCode?: number | null;
            area?: string | null;
            storeFormat?: string | null;
            marketingText?: string | null;
            /** Format: double */
            latitude?: number | null;
            /** Format: double */
            longitude?: number | null;
            deliveryMethods?: string | null;
            customerTypes?: string | null;
            hasKlarna?: string | null;
            /** Format: int32 */
            onlineVersion?: number | null;
            hasPriceAdjustment?: boolean | null;
            /** Format: int64 */
            accountId?: number | null;
            retailerSiteId?: string | null;
            storeProfileId?: string | null;
            slug?: string | null;
            /** Format: int64 */
            isEhl?: number | null;
            retailerSiteIds?: string | null;
            cfcSiteId?: string | null;
            storePickingSiteId?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string | null;
            phone?: string | null;
            email?: string | null;
            organizationNumber?: string | null;
            bhsUrl?: string | null;
            onlineUrl?: string | null;
            onlinePlatform?: string | null;
            /** Format: uuid */
            onlineRegionId?: string | null;
            legalName?: string | null;
            statusHigh?: string | null;
            capital?: string | null;
            /** Format: date-time */
            companyFormed?: string | null;
            /** Format: date-time */
            companyRegistered?: string | null;
            /** Format: date-time */
            currentCompanyRegistered?: string | null;
            stockCompany?: boolean | null;
            vatRegistered?: boolean | null;
            payrollRegistered?: boolean | null;
            fTaxRegistered?: boolean | null;
            companyDescription?: string | null;
            sniCodesSeparatedByDelimeter?: string | null;
            subsidaryToICA?: boolean | null;
            /** Format: int32 */
            subsidaryToICAOwnershipInPercentage?: number | null;
            customSlug?: string | null;
        };
        ICA_Store_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["ICA_Store_Dto"][] | null;
        };
        Not: {
            eventualForpliktelser?: string | null;
            langfristigaSkulder?: string | null;
            stalldaSakerheter?: string | null;
            tillgangarAvsattningarSkulder?: string | null;
            ovrigaMateriellaAnlaggningstillgangar?: string | null;
            andelarKoncernforetag?: string | null;
            byggnaderMark?: string | null;
            inventarierVerktygInstallationer?: string | null;
            andelarIntresseforetagGemensamtStyrdaForetag?: string | null;
            medelantaletAnstallda?: string | null;
            andraLangfristigaFordringar?: string | null;
            upplysningModerforetag1?: string | null;
            upplysningModerforetag2?: string | null;
            andraLangfristigaVardepappersinnehav?: string | null;
            vasentligaHandelserRakenskapsaretsSlut?: string | null;
            checkrakningskreditKommentar?: string | null;
        };
        PersonCompany_Dto: {
            /** Format: int32 */
            companyPersonId?: number;
            positionType?: string | null;
            positionDescription?: string | null;
            /** Format: date-time */
            positionStart?: string | null;
            /** Format: date-time */
            positionEnd?: string | null;
            /** Format: int32 */
            companyId?: number;
            mostRecentLegalName?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        Person_Dto: {
            /** Format: int32 */
            personId?: number;
            nationalityCountryCodeAlpha2?: string | null;
            personalIdentityNumber?: string | null;
            givenName?: string | null;
            firstName?: string | null;
            middleName?: string | null;
            lastName?: string | null;
            fullName?: string | null;
            /** Format: date-time */
            lastUpdatedAtUtc?: string;
        };
        Person_DtoItemsPagination: {
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            lastItemId?: number;
            /** Format: int32 */
            totalItems?: number;
            items?: components["schemas"]["Person_Dto"][] | null;
        };
        /** @enum {string} */
        PhoneNumberType: "fixedLine" | "mobile";
        RequestParams: {
            collection_name?: string | null;
            first_q?: string | null;
            /** Format: int64 */
            per_page?: number | null;
            q?: string | null;
        };
        Revisor: {
            pateckningRevisionsberattelseEnligtStandardutformning?: string | null;
            harPateckningRevisionsberattelseEnligtStandardutformning?: boolean;
            andraKravLagForfattningAnmarkning?: string | null;
            harAndraKravLagForfattningAnmarkning?: boolean;
            ovrigaUpplysningar?: string | null;
            andraKravLagForfattningRevisorAnsvar?: string | null;
            grundUttalanden?: string | null;
            harGrundUttalanden?: boolean;
            styrelsenVerkstallandeDirektorAnsvar?: string | null;
            andraKravLagForfattningGrundUttalanden?: string | null;
            andraKravLagForfattningStyrelseVerkstallandeDirektorAnsvar?: string | null;
            styrelsenAnsvar?: string | null;
            andraKravLagForfattningStyrelseAnsvar?: string | null;
            underskriftRevisionsberattelse?: string | null;
            uttalanden?: string | null;
            andraKravLagForfattningUttalanden?: string | null;
            vasentligOsakerhetsfaktorAvseendeAntagandetFortsattDrift?: string | null;
        };
        SE_CompanyAnnualReportsAll: {
            resultSheets?: components["schemas"]["GenericModelCell"][] | null;
            balanceSheets?: components["schemas"]["GenericModelCell"][] | null;
            footnotes?: components["schemas"]["GenericModelCell"][] | null;
            keyMetrics?: components["schemas"]["GenericModelCell"][] | null;
            additionalInformation?: components["schemas"]["GenericModelCell"][] | null;
        };
        SalesToPublicActor: {
            actorName?: string | null;
            actorType?: string | null;
            actorCode?: string | null;
            /** Format: int32 */
            invoicedApprox2022K?: number | null;
            /** Format: int32 */
            invoicedApprox2023K?: number | null;
        };
        Search_CompanyAddressGeopoint: {
            addressType?: components["schemas"]["CompanyAddressType"];
            co?: string | null;
            street?: string | null;
            houseNumber?: string | null;
            postalCode?: string | null;
            city?: string | null;
            countryCodeAlpha3?: string | null;
            location?: number[] | null;
        };
        Search_CompanyBankAccount: {
            bankAccountType?: components["schemas"]["BankAccountType"];
            accountNumber?: string | null;
            swift_BIC?: string | null;
        };
        Search_CompanyDocument2: {
            /** Format: int32 */
            companyDocumentId?: number;
            companyDocumentType?: components["schemas"]["CompanyDocumentType"];
            /** Format: int64 */
            documentDate?: number | null;
            documentTitle?: string | null;
            documentVersion?: string | null;
            documentValue1?: string | null;
            documentValue2?: string | null;
            documentValue3?: string | null;
            documentUrl?: string | null;
        };
        Search_CompanyEmail: {
            emailAddress?: string | null;
            emailAddressType?: components["schemas"]["EmailAddressType"];
        };
        Search_CompanyFinancialSummary2: {
            /** Format: int64 */
            periodStart?: number;
            /** Format: int64 */
            periodEnd?: number;
            /** Format: int32 */
            rs_NetSalesK?: number | null;
            /** Format: int32 */
            rs_OtherOperatingIncomeK?: number | null;
            /** Format: int32 */
            rs_OperatingProfitOrLossK?: number | null;
            /** Format: int32 */
            rs_SumFinancialItemsK?: number | null;
            /** Format: int32 */
            rs_ProfitAfterFinancialItemsK?: number | null;
            /** Format: int32 */
            bs_TotalAssetsK?: number | null;
            /** Format: double */
            fn_NumberOfEmployees?: number | null;
            /** Format: double */
            km_OperatingMargin?: number | null;
            /** Format: double */
            km_NetProfitMargin?: number | null;
            /** Format: double */
            km_EquityAssetsRatio?: number | null;
            /** Format: double */
            km_GrossMargin?: number | null;
            isAudited?: boolean | null;
        };
        Search_CompanyFranchiseOrLicence: {
            linkedToName?: string | null;
            /** Format: int32 */
            linkedToCompanyId?: number;
            actingUnderName?: string | null;
            data?: unknown[] | null;
        };
        Search_CompanyIndustryCode: {
            sni_2007Code?: string | null;
            sni_2007Name?: string | null;
        };
        Search_CompanyIntelligence2: {
            companyIntelligenceType?: components["schemas"]["CompanyIntelligenceType"];
            companyIntelligenceSubType?: string | null;
            notes?: string | null;
            /** Format: int32 */
            score?: number;
            /** Format: int64 */
            firstSeenAt?: number | null;
            readonly documentUrl?: string | null;
        };
        Search_CompanyLink: {
            hyperlink?: string | null;
            hyperlinkType?: components["schemas"]["CompanyLinkType"];
        };
        Search_CompanyName: {
            nameOrIdentifier?: string | null;
            companyNamingType?: components["schemas"]["CompanyNamingType"];
            /** Format: int64 */
            firstSeenAt?: number | null;
        };
        Search_CompanyPhoneNumber: {
            e164PhoneNumber?: string | null;
            phoneNumberType?: components["schemas"]["PhoneNumberType"];
            numberPlanServiceType?: string | null;
            orginalOperator?: string | null;
            priorOperator?: string | null;
            currentOperator?: string | null;
            /** Format: int64 */
            lastPortingDate?: number | null;
        };
        Search_CompanyStatus: {
            companyStatusType?: components["schemas"]["CompanyStatusType"];
            /** Format: int64 */
            statusDate?: number | null;
            statusDescription?: string | null;
        };
        Search_ECParticipant: {
            pic?: string | null;
            validationStatus?: string | null;
            /** Format: int32 */
            numberOfProjects?: number | null;
            workProgrammesData?: unknown;
            /** Format: int64 */
            lastUpdated?: number;
        };
        Search_LEI: {
            leiCode?: string | null;
            registrationStatus?: string | null;
            /** Format: int64 */
            initialRegistrationDate?: number | null;
            /** Format: int64 */
            nextRenewalDate?: number | null;
            managingLOU?: string | null;
            managingLOULegalName?: string | null;
        };
        Search_StockInformation: {
            isin?: string | null;
            ticker?: string | null;
            yahooSymbol?: string | null;
            marketName?: string | null;
            marketExchangeName?: string | null;
            marketCountryCodeAlpha3?: string | null;
            sectorName?: string | null;
            branchName?: string | null;
            /** Format: int64 */
            listingDate?: number | null;
            /** Format: double */
            enterpriseValue?: number | null;
            /** Format: int64 */
            enterpriseValueUpdated?: number | null;
            /** Format: double */
            stockQuote?: number | null;
            /** Format: int64 */
            stockQuoteUpdated?: number | null;
            /** Format: int64 */
            nextReportDate?: number | null;
            nextReportType?: string | null;
            /** Format: int64 */
            dividendExDate?: number | null;
            /** Format: int32 */
            dividendsPerYear?: number | null;
            /** Format: double */
            dividendAmount?: number | null;
            dividendCurrency?: string | null;
        };
        TextMatchInfo: {
            best_field_score?: string | null;
            /** Format: int64 */
            best_field_weight?: number | null;
            /** Format: int64 */
            fields_matched?: number | null;
            /** Format: int64 */
            num_tokens_dropped?: number | null;
            score?: string | null;
            /** Format: int64 */
            tokens_matched?: number | null;
            /** Format: int64 */
            typo_prefix_score?: number | null;
        };
        TypesenseCompanyDocument: {
            id?: string | null;
            /** Format: int32 */
            companyId?: number;
            iso3166CountryCode?: string | null;
            registrationNumber?: string | null;
            legalEntityType?: string | null;
            /** Format: int64 */
            registrationDate?: number | null;
            mostRecentPurpose?: string | null;
            names?: components["schemas"]["Search_CompanyName"][] | null;
            phoneNumbers?: components["schemas"]["Search_CompanyPhoneNumber"][] | null;
            readonly hasPhoneNumbers?: boolean;
            emailAddresses?: components["schemas"]["Search_CompanyEmail"][] | null;
            readonly hasEmailAddresses?: boolean;
            hyperlinks?: components["schemas"]["Search_CompanyLink"][] | null;
            readonly hasHyperlinks?: boolean;
            sniCodes?: components["schemas"]["Search_CompanyIndustryCode"][] | null;
            intelligence?: components["schemas"]["Search_CompanyIntelligence2"][] | null;
            readonly hasIntelligence?: boolean;
            status?: components["schemas"]["Search_CompanyStatus"][] | null;
            readonly hasStatus?: boolean;
            mostRecentFinancialSummary?: components["schemas"]["Search_CompanyFinancialSummary2"];
            readonly hasMostRecentFinancialSummary?: boolean;
            isRegisteredForVAT?: boolean | null;
            isRegisteredForFTax?: boolean | null;
            isRegisteredForPayroll?: boolean | null;
            ftaxTerminationReason?: string | null;
            bankAccounts?: components["schemas"]["Search_CompanyBankAccount"][] | null;
            readonly hasBankAccounts?: boolean;
            addresses?: components["schemas"]["Search_CompanyAddressGeopoint"][] | null;
            readonly hasAddresses?: boolean;
            documents?: components["schemas"]["Search_CompanyDocument2"][] | null;
            readonly hasDocuments?: boolean;
            stock?: components["schemas"]["Search_StockInformation"];
            readonly hasStock?: boolean;
            lei?: components["schemas"]["Search_LEI"];
            readonly hasLEI?: boolean;
            salesToPublicActors?: components["schemas"]["SalesToPublicActor"][] | null;
            readonly hasSalesToPublicActors?: boolean;
            ecParticipant?: components["schemas"]["Search_ECParticipant"];
            readonly hasECParticipant?: boolean;
            franchisesOrLicences?: components["schemas"]["Search_CompanyFranchiseOrLicence"][] | null;
            readonly hasFranchisesOrLicences?: boolean;
        };
        TypesenseCompanyDocumentGroupedHits: {
            group_key?: string[] | null;
            hits?: components["schemas"]["TypesenseCompanyDocumentHit"][] | null;
        };
        TypesenseCompanyDocumentHit: {
            document?: components["schemas"]["TypesenseCompanyDocument"];
            geo_distance_meters?: unknown;
            highlight?: unknown;
            highlights?: components["schemas"]["HighlightElement"][] | null;
            /** Format: double */
            text_match?: number | null;
            text_match_info?: components["schemas"]["TextMatchInfo"];
        };
        TypesenseCompanyDocumentTypesenseMultiSearchResponse: {
            results?: components["schemas"]["TypesenseCompanyDocumentTypesenseSearchResponse"][] | null;
        };
        TypesenseCompanyDocumentTypesenseSearchResponse: {
            facet_counts?: unknown[] | null;
            /** Format: int32 */
            found?: number;
            hits?: components["schemas"]["TypesenseCompanyDocumentHit"][] | null;
            grouped_hits?: components["schemas"]["TypesenseCompanyDocumentGroupedHits"];
            /** Format: int32 */
            out_of?: number;
            /** Format: int32 */
            page?: number;
            request_params?: components["schemas"]["RequestParams"];
            search_cutoff?: boolean | null;
            /** Format: int32 */
            search_time_ms?: number;
        };
        TypesenseCompanyFinancialReportDocument: {
            id?: string | null;
            /** Format: int32 */
            companyId?: number | null;
            companyName?: string | null;
            /** Format: int32 */
            externalId?: number;
            /** Format: int64 */
            registrationNumber?: number | null;
            /** Format: int32 */
            periodEnd?: number | null;
            ruleset?: string | null;
            formatDescription?: string | null;
            /** Format: int32 */
            caseNumber?: number;
            /** Format: int32 */
            caseYear?: number;
            /** Format: int32 */
            netSalesK?: number | null;
            /** Format: double */
            numberOfEmployees?: number | null;
            /** Format: int32 */
            balanceSheetTotalK?: number | null;
            otherText?: string | null;
            auditorOtherText?: string | null;
            revisorNamn?: string | null;
            revisionsbolag?: string | null;
            allmantVerksamheten?: string | null;
            vasentligaHandelserRakenskapsaret?: string | null;
            verksamhetenArtInriktning?: string | null;
            viktigaForandringarVerksamheten?: string | null;
            viktigaExternaFaktorerPaverkatForetagetStallningResultat?: string | null;
            speciellaOmstandigheterBerorForetaget?: string | null;
            uppgiftAgareMerAnTioProcentAndelarRoster?: string | null;
            komplementarKommanditbolag?: string | null;
            ovrigaViktigaForhallandenVasentligaHandelser?: string | null;
            kommentarFlerarsoversikt?: string | null;
            forandringEgetKapitalKommentar?: string | null;
            avskrivningarMateriellaAnlaggningstillgangarKommentar?: string | null;
            andelarKoncernforetagKommentar?: string | null;
            dispositionerVinstForlustKommentar?: string | null;
            foretagetsSate?: string | null;
            eventualForpliktelser?: string | null;
            uppgiftModerforetag?: string | null;
            harNot?: boolean;
            not?: components["schemas"]["Not"];
            harRevisor?: boolean;
            revisor?: components["schemas"]["Revisor"];
            reportSoftwareMetaTag?: string | null;
            reportSoftwareVersionMetaTag?: string | null;
            reportApplicationName?: string | null;
            reportAuditReportHashMetaTag?: string | null;
            reportOriginatorMetaTag?: string | null;
            reportAuditorMetaTag?: string | null;
            auditorSoftwareMetaTag?: string | null;
            auditorSoftwareVersionMetaTag?: string | null;
            auditorApplicationName?: string | null;
            auditorReportHashMetaTag?: string | null;
            auditorOriginatorMetaTag?: string | null;
        };
        TypesenseCompanyFinancialReportDocumentGroupedHits: {
            group_key?: string[] | null;
            hits?: components["schemas"]["TypesenseCompanyFinancialReportDocumentHit"][] | null;
        };
        TypesenseCompanyFinancialReportDocumentHit: {
            document?: components["schemas"]["TypesenseCompanyFinancialReportDocument"];
            geo_distance_meters?: unknown;
            highlight?: unknown;
            highlights?: components["schemas"]["HighlightElement"][] | null;
            /** Format: double */
            text_match?: number | null;
            text_match_info?: components["schemas"]["TextMatchInfo"];
        };
        TypesenseCompanyFinancialReportDocumentTypesenseMultiSearchResponse: {
            results?: components["schemas"]["TypesenseCompanyFinancialReportDocumentTypesenseSearchResponse"][] | null;
        };
        TypesenseCompanyFinancialReportDocumentTypesenseSearchResponse: {
            facet_counts?: unknown[] | null;
            /** Format: int32 */
            found?: number;
            hits?: components["schemas"]["TypesenseCompanyFinancialReportDocumentHit"][] | null;
            grouped_hits?: components["schemas"]["TypesenseCompanyFinancialReportDocumentGroupedHits"];
            /** Format: int32 */
            out_of?: number;
            /** Format: int32 */
            page?: number;
            request_params?: components["schemas"]["RequestParams"];
            search_cutoff?: boolean | null;
            /** Format: int32 */
            search_time_ms?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AccountList: {
        parameters: {
            query?: {
                /** @description Name or registration number of the account, use % for wildcard */
                query?: string;
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Account_DtoItemsPagination"];
                };
            };
        };
    };
    AccountCreate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The payload */
        requestBody: {
            content: {
                "application/json": components["schemas"]["AccountCreate_Dto"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetail_Dto"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Content */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The account id */
                accountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetail_Dto"];
                };
            };
        };
    };
    AccountEdit: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                accountId: number;
            };
            cookie?: never;
        };
        /** @description The payload */
        requestBody: {
            content: {
                "application/json-patch+json": components["schemas"]["AccountEdit_Dto"];
                "application/json": components["schemas"]["AccountEdit_Dto"];
                "text/json": components["schemas"]["AccountEdit_Dto"];
                "application/*+json": components["schemas"]["AccountEdit_Dto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetail_Dto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Content */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountDelete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The account id to delete */
                accountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountDefault: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetail_Dto"];
                };
            };
        };
    };
    AccountSetDefault: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The account id */
                accountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetail_Dto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Content */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountGetCompanies: {
        parameters: {
            query?: {
                query?: string;
                lastItemId?: number;
                pageSize?: number;
                includeSearchHit?: boolean;
            };
            header?: never;
            path: {
                accountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountCompanyDetail_DtoItemsPagination"];
                };
            };
        };
    };
    AccountAddCompanies: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The account id */
                accountId: number;
            };
            cookie?: never;
        };
        /** @description The list of companies to add */
        requestBody: {
            content: {
                "application/json-patch+json": components["schemas"]["AccountCompanyCreate_Dto"][];
                "application/json": components["schemas"]["AccountCompanyCreate_Dto"][];
                "text/json": components["schemas"]["AccountCompanyCreate_Dto"][];
                "application/*+json": components["schemas"]["AccountCompanyCreate_Dto"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountCompany_Dto"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Content */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountDeleteCompany: {
        parameters: {
            query?: {
                /** @description The company id */
                companyId?: number;
                /** @description The external id 1 */
                externalId1?: string;
                /** @description The external id 2 */
                externalId2?: string;
            };
            header?: never;
            path: {
                /** @description The account id */
                accountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountEditCompany: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The account id */
                accountId: number;
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        /** @description The new company data */
        requestBody: {
            content: {
                "application/json-patch+json": components["schemas"]["AccountCompanyEdit_Dto"];
                "application/json": components["schemas"]["AccountCompanyEdit_Dto"];
                "text/json": components["schemas"]["AccountCompanyEdit_Dto"];
                "application/*+json": components["schemas"]["AccountCompanyEdit_Dto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountCompany_Dto"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Content */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountFolders: {
        parameters: {
            query?: {
                query?: string;
                lastItemId?: number;
                pageSize?: number;
            };
            header?: never;
            path: {
                /** @description The account id */
                accountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folder_DtoItemsPagination"];
                };
            };
        };
    };
    BolagsverketStatisticsReportsDaily: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BolagsverketFinancialReportsStatistics"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BolagsverketStatisticsReportsMonthly: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BolagsverketFinancialReportsStatistics"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BolagsverketStatisticsSoftwareDiscrepanciesYTD: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BolagsverketFinancialReportSoftwareStatistics"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CompanySummary: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TypesenseCompanyDocument"];
                };
            };
        };
    };
    FinancialSummary: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyFinancialSummary_Dto"][];
                };
            };
        };
    };
    Intelligence: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyIntelligence_Dto"][];
                };
            };
        };
    };
    CompanyHasOwnerships: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DTO_SE_CompanySummary"][];
                };
            };
        };
    };
    CompanyBankAccounts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyBankAccount_Dto"][];
                };
            };
        };
    };
    CompanySNICodes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanySNI_Dto"][];
                };
            };
        };
    };
    CompanyEmployeeContributions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyContributionsEmployementService_Dto"][];
                };
            };
        };
    };
    CompanyPayrolls: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyPayroll_Dto"][];
                };
            };
        };
    };
    CompanyShareRegister: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyShareRegister_Dto"][];
                };
            };
        };
    };
    CompanyPurpose: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyPurpose_Dto"][];
                };
            };
        };
    };
    CompanyHyperlinks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyHyperlink_Dto"][];
                };
            };
        };
    };
    CompanyNames: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyName_Dto"][];
                };
            };
        };
    };
    CompanyPhonenumbers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyPhoneNumber_Dto"][];
                };
            };
        };
    };
    CompanyEmail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyEmail_Dto"][];
                };
            };
        };
    };
    CompanySignatories: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanySignatory_Dto"][];
                };
            };
        };
    };
    CompanyDocuments: {
        parameters: {
            query: {
                /** @description Set to false to exclude transformed documents */
                includeTransformed: boolean;
            };
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Document_Dto"][];
                };
            };
        };
    };
    CompanyPublicDocuments: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyDocument_Dto"][];
                };
            };
        };
    };
    CompanyShareCapital: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyShareCapital_Dto"][];
                };
            };
        };
    };
    CompanyTrademarks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyTrademark_Dto"][];
                };
            };
        };
    };
    CompanyAddresses: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyAddress_Dto"][];
                };
            };
        };
    };
    CompanyRegisteredOffices: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyRegisteredOffice_Dto"][];
                };
            };
        };
    };
    CompanyStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyStatus_Dto"][];
                };
            };
        };
    };
    CompanyDomains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyDomain_Dto"][];
                };
            };
        };
    };
    CompanyParties: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyPerson_Dto"][];
                };
            };
        };
    };
    CompanyFinancialReports: {
        parameters: {
            query?: {
                /** @description The language code of the annual report */
                iso639_2_LanguageCode?: string;
                /** @description Supply if you want to receive only a specific period as entered as YYYYMM */
                annualReportPeriod?: number;
            };
            header?: never;
            path: {
                /** @description The company id */
                companyId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SE_CompanyAnnualReportsAll"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DocumentList: {
        parameters: {
            query?: {
                /** @description Set to true to include orginal document */
                includeOrginal?: boolean;
                /** @description Set to true to include transformed documents */
                includeTransformed?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                documentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Document_Dto"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DocumentDelete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The document id */
                documentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Document_Dto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DocumentDownload: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline image */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                documentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ECSearchParticipants: {
        parameters: {
            query: {
                /** @description Registration PIC, legal or business, registration number or VAT-number, use % for wildcard */
                query: string;
                lastItemId?: number;
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EC_Participant_DtoItemsPagination"];
                };
            };
        };
    };
    ECDetailsParticipant: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The participant id */
                pic: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EC_ParticipantDetail_Dto"];
                };
            };
        };
    };
    ECParticipantProjects: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The participant id */
                pic: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EC_ParticipantProject_Dto"][];
                };
            };
        };
    };
    ECSearchProjects: {
        parameters: {
            query: {
                /** @description Acronym or project id, use % for wildcard */
                query: string;
                lastItemId?: number;
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EC_CORDIS_Project_DtoItemsPagination"];
                };
            };
        };
    };
    ECDetailsProjectMembers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The project id */
                projectId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EC_CORDISOrganization_Dto"][];
                };
            };
        };
    };
    FinancialDocumentsById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The financial document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyFinancialDocument_Dto"];
                };
            };
        };
    };
    FinancialDocumentsMetadataById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The financial document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyFinancialDocumentMetadata_Dto"];
                };
            };
        };
    };
    FinancialDocumentReportDownloadPDF: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline file rendered in the browser */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FinancialDocumentReportDownloadXBRL: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline file rendered in the browser */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FinancialDocumentReportDownloadiXBRL: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline file rendered in the browser */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FinancialDocumentReportDownloadiXBRLOverylayErrors: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline file rendered in the browser */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FinancialDocumentReportDownloadAuditPDF: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline file rendered in the browser */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FinancialDocumentReportDownloadAuditXBRL: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline file rendered in the browser */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FinancialDocumentReportDownloadAuditiXBRL: {
        parameters: {
            query?: {
                /** @description Set to true to get an inline file rendered in the browser */
                inline?: boolean;
            };
            header?: never;
            path: {
                /** @description The document id */
                financialDocumentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FINotifications: {
        parameters: {
            query?: {
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FI_Notification_DtoItemsPagination"];
                };
            };
        };
    };
    FINotificationsExtended: {
        parameters: {
            query?: {
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FI_NotificationExtended_DtoItemsPagination"];
                };
            };
        };
    };
    FIInsiderTrading: {
        parameters: {
            query?: {
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FI_InsiderTrading_DtoItemsPagination"];
                };
            };
        };
    };
    FIInsiderTradingDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The report id */
                reportId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FI_InsiderTradingTransaction_Dto"][];
                };
            };
        };
    };
    FIInsiderTradingSummary: {
        parameters: {
            query?: {
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FI_InsiderTradingExtended_DtoItemsPagination"];
                };
            };
        };
    };
    FolderList: {
        parameters: {
            query?: {
                /** @description Optional query by foldername, description, external id 1 or external id 2 */
                query?: string;
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
                /** @description Filter by a specific account id */
                accountId?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folder_DtoItemsPagination"];
                };
            };
        };
    };
    FolderCreate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The payload */
        requestBody: {
            content: {
                "application/json": components["schemas"]["FolderCreate_Dto"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FolderDetail_Dto"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Content */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FolderDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The folder id */
                folderId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FolderDetail_Dto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FolderEdit: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The folder id */
                folderId: number;
            };
            cookie?: never;
        };
        /** @description The payload */
        requestBody: {
            content: {
                "application/json-patch+json": components["schemas"]["FolderEdit_Dto"];
                "application/json": components["schemas"]["FolderEdit_Dto"];
                "text/json": components["schemas"]["FolderEdit_Dto"];
                "application/*+json": components["schemas"]["FolderEdit_Dto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FolderDetail_Dto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Content */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FolderDocuments: {
        parameters: {
            query?: {
                /** @description Set to true if you want to return files marked as deleted */
                includeDeleted?: boolean;
            };
            header?: never;
            path: {
                /** @description The folder id */
                folderId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Document_Dto"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FolderUpload: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The folder id */
                folderId: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    File: string;
                    DocumentType: components["schemas"]["DocumentType"];
                    DocumentTransformType?: components["schemas"]["DocumentTransformType"];
                    MimeType?: string;
                    Description?: string;
                    ExternalId1?: string;
                    ExternalId2?: string;
                    /** Format: int32 */
                    CompanyId?: number;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Document_Dto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FolderDocument: {
        parameters: {
            query: {
                /** @description Set to true to also include the orginal file if it has been transformed */
                includeOrginal: boolean;
                /** @description Set to true to also include the transformed files */
                includeTransformed: boolean;
            };
            header?: never;
            path: {
                /** @description The folder id */
                folderId: number;
                /** @description The document id */
                documentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Document_Dto"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICAList: {
        parameters: {
            query?: {
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICA_Store_DtoItemsPagination"];
                };
            };
        };
    };
    ICADetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the ICA store */
                icaStoreId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICA_Store_Dto"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICANotes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the ICA store */
                icaStoreId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICA_StoreNote_Dto"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICAAnnualReports: {
        parameters: {
            query?: {
                /** @description The language code of the annual report */
                iso639_2_LanguageCode?: string;
                /** @description Supply if you want to receive only a specific period as entered as YYYYMM */
                annualReportPeriod?: number;
            };
            header?: never;
            path: {
                /** @description The ICA store id */
                icaStoreId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SE_CompanyAnnualReportsAll"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICACatalog: {
        parameters: {
            query?: {
                /** @description Take records after the id */
                lastItemId?: number;
                /** @description Page size */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICA_CatalogItem_DtoItemsPagination"];
                };
            };
        };
    };
    ICAStatisticsStore: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ICA store id */
                ica_storeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICAStoreDetailCache"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICAStatisticsLargest: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICAStoreFinancialsCache"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICAStatisticsMostProfitable: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICAStoreFinancialsCache"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICAStatisticsExtraDividends: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICAStoreFinancialsCache"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ICAStatisticsWinterDestinations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ICAStoreFinancialsCache"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PersonSearch: {
        parameters: {
            query: {
                /** @description Registration number or name, use % for wildcard */
                query: string;
                lastItemId?: number;
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Person_DtoItemsPagination"];
                };
            };
        };
    };
    PersonDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The person id */
                personId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Person_Dto"];
                };
            };
        };
    };
    PersonCompanies: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The person id */
                personId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PersonCompany_Dto"][];
                };
            };
        };
    };
    SearchCompanies: {
        parameters: {
            query: {
                /** @description The query string use * for all */
                q: string;
                /** @description Query by field, for supported fields see documentation */
                query_by: string;
                /** @description Filter by, for supported fields see documentation */
                filter_by?: string;
                /** @description Sort by, for supported fields see documentation */
                sort_by?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TypesenseCompanyDocumentTypesenseSearchResponse"];
                };
            };
        };
    };
    SearchCompaniesMulti: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description For full documentation check https://typesense.org/docs/26.0/api/federated-multi-search.html#multi-search-parameters */
        requestBody: {
            content: {
                "application/json-patch+json": unknown;
                "application/json": unknown;
                "text/json": unknown;
                "application/*+json": unknown;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TypesenseCompanyDocumentTypesenseMultiSearchResponse"];
                };
            };
        };
    };
    SearchCompaniesReportsSweden: {
        parameters: {
            query: {
                /** @description The query string use * for all */
                q: string;
                /** @description Query by field, for supported fields see documentation */
                query_by: string;
                /** @description Filter by, for supported fields see documentation */
                filter_by?: string;
                /** @description Sort by, for supported fields see documentation */
                sort_by?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TypesenseCompanyFinancialReportDocumentTypesenseSearchResponse"];
                };
            };
        };
    };
    SearchCompaniesReportsSwedenMulti: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description For full documentation check https://typesense.org/docs/26.0/api/federated-multi-search.html#multi-search-parameters */
        requestBody: {
            content: {
                "application/json-patch+json": unknown;
                "application/json": unknown;
                "text/json": unknown;
                "application/*+json": unknown;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TypesenseCompanyFinancialReportDocumentTypesenseMultiSearchResponse"];
                };
            };
        };
    };
    UserMe: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserMeClaims: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
